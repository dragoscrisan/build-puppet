#!/bin/bash

# This is a wrapper script for calling generic worker, such that when the worker
# exits, this script will reboot the machine. Note, in the worker config
# (/etc/generic-worker.config) we set numberOfTasksToRun to 1 so that the worker
# will exit after running a single task. This script is then responsible for
# rebooting the machine.

# If this file exists when the worker starts up, and its content is equal
# to numberOfTasksToRun, the worker won't exit and machine won't reboot.
rm -f tasks-resolved-count.txt

export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin

# First run the generic-worker, passing through any arguments handed to this
# wrapper script...
/usr/local/bin/generic-worker "$@" 2>&1 | logger -t generic-worker -s

exitcode="${PIPESTATUS[0]}"

# Check exit code. If exitcode is 0, 67, 68 then reboot the worker, else quarantine worker and open the bug
/usr/local/bin/python3 /usr/local/share/generic-worker/generic-worker-utils.py $exitcode